剑圣一心(710000) - 剩余Kengeki函数完整中文注释

=== Kengeki30-31 定时器管理反击 ===

-- ========== 剑戟反应30：定时反击A (Kengeki Reaction 30: Timed Counter A) ==========
Goal.Kengeki30 = function (f46_arg0, f46_arg1, f46_arg2)
    f46_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行定时终结攻击3063，设置10秒计时器 (Execute timed final attack 3063 with 10-second timer)
    f46_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3063, TARGET_ENE_0, 9999, 0, 0):TimingSetTimer(1, 10, AI_TIMING_SET__UPDATE_SUCCESS)
    f46_arg0:SetNumber(5, 0)  -- 重置计数器5 (Reset counter 5)
end

-- ========== 剑戟反应31：定时反击B (Kengeki Reaction 31: Timed Counter B) ==========
Goal.Kengeki31 = function (f47_arg0, f47_arg1, f47_arg2)
    f47_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行定时终结攻击3068，设置10秒计时器 (Execute timed final attack 3068 with 10-second timer)
    f47_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3068, TARGET_ENE_0, 9999, 0, 0):TimingSetTimer(1, 10, AI_TIMING_SET__UPDATE_SUCCESS)
    f47_arg0:SetNumber(5, 0)  -- 重置计数器5 (Reset counter 5)
end

=== Kengeki32-33 距离适应连击 ===

-- ========== 剑戟反应32：远距离连击 (Kengeki Reaction 32: Long Range Combo) ==========
Goal.Kengeki32 = function (f48_arg0, f48_arg1, f48_arg2)
    local f48_local0 = 0  -- 转向时间 (Turn time)
    local f48_local1 = 0  -- 正面角度 (Front angle)
    -- 计算最大攻击距离：999减去自身碰撞半径 (Calculate max attack distance: 999 minus self hit radius)
    local f48_local2 = 999 - f48_arg0:GetMapHitRadius(TARGET_SELF)
    local f48_local3 = 7 - f48_arg0:GetMapHitRadius(TARGET_SELF)  -- 终结攻击距离 (Final attack distance)

    f48_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行连击起手攻击3018 (Execute combo starter attack 3018)
    f48_arg1:AddSubGoal(GOAL_COMMON_ComboAttackTunableSpin, 10, 3018, TARGET_ENE_0, f48_local2, f48_local0, f48_local1, 0, 0)
    -- 执行终结攻击3015 (Execute final attack 3015)
    f48_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3015, TARGET_ENE_0, 9999, 0, 0)
    f48_arg0:SetNumber(6, 1)  -- 设置状态计数器6 (Set state counter 6)
end

-- ========== 剑戟反应33：适应性连击 (Kengeki Reaction 33: Adaptive Combo) ==========
Goal.Kengeki33 = function (f49_arg0, f49_arg1, f49_arg2)
    local f49_local0 = 0  -- 转向时间 (Turn time)
    local f49_local1 = 0  -- 正面角度 (Front angle)
    local f49_local2 = 999 - f49_arg0:GetMapHitRadius(TARGET_SELF)   -- 起手攻击距离 (Starter attack distance)
    local f49_local3 = 7.8 - f49_arg0:GetMapHitRadius(TARGET_SELF)  -- 连击重复距离 (Combo repeat distance)
    local f49_local4 = 2.5 - f49_arg0:GetMapHitRadius(TARGET_SELF)  -- 备用距离 (Backup distance)
    local f49_local5 = f49_arg0:GetRandam_Int(1, 100)  -- 随机数决定连击分支 (Random number for combo branch)

    f49_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行连击起手攻击3018 (Execute combo starter attack 3018)
    f49_arg1:AddSubGoal(GOAL_COMMON_ComboAttackTunableSpin, 10, 3018, TARGET_ENE_0, f49_local2, f49_local0, f49_local1, 0, 0)

    if f49_local5 <= 50 then
        -- 50%概率：执行完整连击序列 (50% chance: Execute full combo sequence)
        f49_arg1:AddSubGoal(GOAL_COMMON_ComboRepeat, 10, 3019, TARGET_ENE_0, f49_local3, 0)     -- 连击重复3019
        f49_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3029, TARGET_ENE_0, 9999, 0, 0)         -- 终结攻击3029
    else
        -- 50%概率：执行单一终结攻击 (50% chance: Execute single final attack)
        f49_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3019, TARGET_ENE_0, 9999, 0, 0)         -- 终结攻击3019
    end
    f49_arg0:SetNumber(6, 0)  -- 重置状态计数器6 (Reset state counter 6)
end

=== Kengeki34-35 简单连击 ===

-- ========== 剑戟反应34：双段连击 (Kengeki Reaction 34: Two-Stage Combo) ==========
Goal.Kengeki34 = function (f50_arg0, f50_arg1, f50_arg2)
    f50_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行连击重复3037，距离6 (Execute combo repeat 3037 at distance 6)
    f50_arg1:AddSubGoal(GOAL_COMMON_ComboRepeat, 10, 3037, TARGET_ENE_0, 6, 0)
    -- 执行终结攻击3020 (Execute final attack 3020)
    f50_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3020, TARGET_ENE_0, 9999, 0, 0)
end

-- ========== 剑戟反应35：快速终结 (Kengeki Reaction 35: Quick Finisher) ==========
Goal.Kengeki35 = function (f51_arg0, f51_arg1, f51_arg2)
    f51_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行快速终结攻击3016 (Execute quick final attack 3016)
    f51_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3016, TARGET_ENE_0, 9999, 0, 0)
    f51_arg0:SetNumber(5, 0)  -- 重置计数器5 (Reset counter 5)
end

=== Kengeki38 忍杀数量感知反击 ===

-- ========== 剑戟反应38：忍杀感知反击 (Kengeki Reaction 38: Ninsatsu-Aware Counter) ==========
Goal.Kengeki38 = function (f52_arg0, f52_arg1, f52_arg2)
    local f52_local0 = 0  -- 转向时间 (Turn time)
    local f52_local1 = 0  -- 正面角度 (Front angle)
    local f52_local2 = f52_arg0:GetNinsatsuNum()      -- 玩家忍杀数量 (Player ninsatsu count)
    local f52_local3 = f52_arg0:GetRandam_Int(1, 100) -- 随机数1-100 (Random number 1-100)

    f52_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行连击起手攻击3030 (Execute combo starter attack 3030)
    f52_arg1:AddSubGoal(GOAL_COMMON_ComboAttackTunableSpin, 10, 3030, TARGET_ENE_0, 999, f52_local0, f52_local1, 0, 0)

    if f52_local2 <= 1 then
        -- 玩家忍杀数量<=1时的特殊处理 (Special handling when player ninsatsu count <= 1)
        if f52_local3 <= 75 then
            -- 75%概率：执行强力终结攻击3067 (75% chance: Execute powerful final attack 3067)
            f52_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3067, TARGET_ENE_0, 9999, 0, 0)
        else
            -- 25%概率：执行标准终结攻击3025 (25% chance: Execute standard final attack 3025)
            f52_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3025, TARGET_ENE_0, 9999, 0, 0)
        end
    else
        -- 玩家忍杀数量>1时：执行标准终结攻击3025 (When player ninsatsu count > 1: Execute standard final attack 3025)
        f52_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3025, TARGET_ENE_0, 9999, 0, 0)
    end
end

=== Kengeki39 三段连击 ===

-- ========== 剑戟反应39：三段连击序列 (Kengeki Reaction 39: Three-Stage Combo Sequence) ==========
Goal.Kengeki39 = function (f53_arg0, f53_arg1, f53_arg2)
    local f53_local0 = 0  -- 转向时间 (Turn time)
    local f53_local1 = 0  -- 正面角度 (Front angle)
    local f53_local2 = 999 - f53_arg0:GetMapHitRadius(TARGET_SELF) -- 起手攻击距离 (Starter attack distance)
    local f53_local3 = f53_arg0:GetDist(TARGET_ENE_0)  -- 与玩家当前距离 (Current distance to player)

    f53_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行连击起手攻击3034 (Execute combo starter attack 3034)
    f53_arg1:AddSubGoal(GOAL_COMMON_ComboAttackTunableSpin, 10, 3034, TARGET_ENE_0, f53_local2, f53_local0, f53_local1, 0, 0)
    -- 执行连击重复3036，距离999 (Execute combo repeat 3036 at distance 999)
    f53_arg1:AddSubGoal(GOAL_COMMON_ComboRepeat, 10, 3036, TARGET_ENE_0, 999, 0)
    -- 执行终结攻击3015 (Execute final attack 3015)
    f53_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3015, TARGET_ENE_0, 9999, 0, 0)
end

=== Kengeki40 长计时器反击 ===

-- ========== 剑戟反应40：长计时器反击 (Kengeki Reaction 40: Long Timer Counter) ==========
Goal.Kengeki40 = function (f54_arg0, f54_arg1, f54_arg2)
    f54_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行特殊终结攻击3028 (Execute special final attack 3028)
    f54_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3028, TARGET_ENE_0, 9999, 0, 0)
    f54_arg0:SetTimer(6, 50)  -- 设置50秒长计时器 (Set 50-second long timer)
end

=== Kengeki43-45 状态管理反击 ===

-- ========== 剑戟反应43：状态标记反击A (Kengeki Reaction 43: State Flag Counter A) ==========
Goal.Kengeki43 = function (f55_arg0, f55_arg1, f55_arg2)
    f55_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行状态攻击3062 (Execute state attack 3062)
    f55_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3062, TARGET_ENE_0, 9999, 0, 0)
    f55_arg0:SetNumber(2, 1)  -- 设置状态标记2 (Set state flag 2)
end

-- ========== 剑戟反应44：状态标记反击B (Kengeki Reaction 44: State Flag Counter B) ==========
Goal.Kengeki44 = function (f56_arg0, f56_arg1, f56_arg2)
    f56_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行状态攻击3067 (Execute state attack 3067)
    f56_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3067, TARGET_ENE_0, 9999, 0, 0)
    f56_arg0:SetNumber(2, 1)  -- 设置状态标记2 (Set state flag 2)
end

-- ========== 剑戟反应45：重置反击 (Kengeki Reaction 45: Reset Counter) ==========
Goal.Kengeki45 = function (f57_arg0, f57_arg1, f57_arg2)
    f57_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行重置攻击3045 (Execute reset attack 3045)
    f57_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3045, TARGET_ENE_0, 9999, 0, 0)
    f57_arg0:SetNumber(0, 0)  -- 重置主计数器0 (Reset main counter 0)
end

=== Kengeki46-47 移动组合反击 ===

-- ========== 剑戟反应46：攻击后移动组合 (Kengeki Reaction 46: Attack-Move Combination) ==========
Goal.Kengeki46 = function (f58_arg0, f58_arg1, f58_arg2)
    local f58_local0 = 0  -- 转向时间 (Turn time)
    local f58_local1 = 0  -- 正面角度 (Front angle)
    local f58_local2 = 7.8 - f58_arg0:GetMapHitRadius(TARGET_SELF) + 2  -- 攻击距离 (Attack distance)
    local f58_local3 = 0  -- 临时变量 (Temporary variable)
    local f58_local4 = f58_arg0
    -- 获取随机数1-100 (Get random number 1-100)
    f58_local3 = f58_arg0.GetRandam_Int
    f58_local3 = f58_local3(f58_local4, 1, 100)
    f58_local4 = f58_arg0:GetSp(TARGET_SELF)  -- 自身SP值 (Self SP value)
    local f58_local5 = f58_arg0:GetRandam_Int(30, 45)  -- 随机移动角度30-45 (Random move angle 30-45)

    f58_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行攻击3039，设置4号计时器10秒 (Execute attack 3039 with timer 4 for 10 seconds)
    f58_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3039, TARGET_ENE_0, 9999, 0, 0):TimingSetTimer(4, 10, AI_TIMING_SET__UPDATE_SUCCESS)
    -- 执行侧向移动2.5秒，角度为f58_local5 (Execute sideways movement for 2.5 seconds at angle f58_local5)
    f58_arg1:AddSubGoal(GOAL_COMMON_SidewayMove, 2.5, TARGET_ENE_0, 0, f58_local5, true, true, -1)
end

-- ========== 剑戟反应47：定时终结攻击 (Kengeki Reaction 47: Timed Final Attack) ==========
Goal.Kengeki47 = function (f59_arg0, f59_arg1, f59_arg2)
    f59_arg1:ClearSubGoal()  -- 清除当前子目标 (Clear current sub-goals)
    -- 执行定时终结攻击3038，设置4号计时器10秒 (Execute timed final attack 3038 with timer 4 for 10 seconds)
    f59_arg1:AddSubGoal(GOAL_COMMON_ComboFinal, 10, 3038, TARGET_ENE_0, 9999, 0, 0):TimingSetTimer(4, 10, AI_TIMING_SET__UPDATE_SUCCESS)
end

=== 剑戟系统总结 ===

剑圣一心的剑戟系统包含以下特点：

1. **分层反击机制**：
   - 简单反击：Kengeki17-21 (直接终结攻击)
   - 复杂反击：Kengeki15,20,32-33 (多段连击或空间判断)
   - 状态感知：Kengeki38,43-45 (基于忍杀数量或状态标记)

2. **计时器管理**：
   - 短计时器：Kengeki30-31 (10秒)
   - 长计时器：Kengeki40 (50秒)
   - 攻击计时器：Kengeki46-47 (攻击后的计时控制)

3. **距离适应性**：
   - 所有距离计算都考虑自身碰撞半径
   - 远距离：999-半径 (最大范围攻击)
   - 中距离：7.8-半径 (标准连击距离)
   - 近距离：2.5-半径 (紧密连击距离)

4. **随机性与可预测性平衡**：
   - 50%分支概率保证行为多样性
   - 75%/25%概率用于关键决策
   - 状态计数器确保某些行为的可预测性

5. **移动集成**：
   - Kengeki46结合攻击和侧向移动
   - Kengeki20包含复杂的空间检查和后退逻辑

这个剑戟系统展现了只狼战斗机制的核心：通过精确的时机、距离和状态管理，创造出富有挑战性和策略深度的Boss战体验。每种反应都有其特定的触发条件和战术目的，共同构成了剑圣一心作为最终Boss的完整战斗逻辑。